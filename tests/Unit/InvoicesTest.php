<?php

namespace Hsy\Store\Tests;


use Hsy\Store\Models\Invoice;
use Hsy\Store\Models\InvoiceItem;
use Hsy\Store\Models\Product;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Hsy\Store\Facades\Store;
use Illuminate\Http\Request;
use Illuminate\Http\UploadedFile;

class InvoicesTest extends TestCase
{
    use RefreshDatabase;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
    }

    /** @test */
    public function cart_to_invoice()
    {
        $productsCount = 20;
        $products = factory(Product::class, $productsCount)->create();
        foreach ($products as $product) {
            Store::cart()->add($product, 10);
        }

        $invoiceFromCart = Store::cart()->toInvoice();
        $invoice = Invoice::first();

        $this->assertEquals($invoice->attributes, $invoiceFromCart->attributes);
        $this->assertCount($productsCount, InvoiceItem::all());
    }

    /** @test */
    public function invoice_extra_data()
    {
        $faker = \Faker\Factory::create();
        $product = factory(Product::class)->create();
        $product->addToCart();

        $extraData = [
            "customer_name" => $faker->name,
            "customer_email" => $faker->email,
            "customer_address" => $faker->address,
        ];
        $invoiceFromCart = Store::cart()->toInvoice($extraData);
        $this->assertEquals($extraData, Invoice::first()->extra_data);
    }

}
